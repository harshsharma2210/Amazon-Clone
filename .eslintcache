[{"/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/index.js":"1","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/reportWebVitals.js":"2","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/App.js":"3","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/Cart.js":"4","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/Home.js":"5","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/Header.js":"6","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/firebase.js":"7","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/CartItems.js":"8","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/CartTotal.js":"9","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/Product.js":"10","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/CartItem.js":"11"},{"size":500,"mtime":1608415559000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1608415559000,"results":"14","hashOfConfig":"13"},{"size":1031,"mtime":1608415559000,"results":"15","hashOfConfig":"13"},{"size":341,"mtime":1608415559000,"results":"16","hashOfConfig":"13"},{"size":1961,"mtime":1608415559000,"results":"17","hashOfConfig":"13"},{"size":2503,"mtime":1608415559000,"results":"18","hashOfConfig":"13"},{"size":483,"mtime":1613475309382,"results":"19","hashOfConfig":"13"},{"size":558,"mtime":1608415559000,"results":"20","hashOfConfig":"13"},{"size":818,"mtime":1608415559000,"results":"21","hashOfConfig":"13"},{"size":1213,"mtime":1608415559000,"results":"22","hashOfConfig":"13"},{"size":1586,"mtime":1608415559000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"kf0u4v",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/index.js",[],["52","53"],"/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/reportWebVitals.js",[],"/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/App.js",["54","55","56"],"import logo from './logo.svg';\nimport { useEffect, useState } from 'react'\nimport './App.css';\nimport Header from './Header'\nimport Home from './Home'\nimport Cart from './Cart'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { db } from './firebase'\n\nfunction App() {Â \n\n  const [ cartItems, setCartItems ] = useState([]);\n\n  useEffect(() => {\n    db.collection('cart-items').onSnapshot((snapshot)=>{\n      let tempCartItems = []\n      snapshot.docs.map((doc)=>{\n          tempCartItems.push({\n              id: doc.id,\n              cartItem: doc.data()\n          })\n      })\n      setCartItems(tempCartItems)\n    })\n  }, [])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header \n          cartItems={cartItems} />\n        <Switch>\n          <Route path=\"/cart\">\n            <Cart cartItems={cartItems} />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/Cart.js",[],"/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/Home.js",["57"],"import React, {useEffect, useState} from 'react'\nimport './Home.css'\nimport Product from './Product'\nimport { db } from './firebase'\n\nfunction Home() {\n\n    const [ products, setProducts ] = useState([]);\n\n    useEffect(() => {\n        db.collection('products').onSnapshot((snapshot)=>{\n            let tempProducts = []\n            snapshot.docs.map((doc)=>{\n                tempProducts.push({\n                    id: doc.id,\n                    product: doc.data()\n                })\n            })\n            setProducts(tempProducts)\n        })\n    }, [])\n\n\n    return (\n        <div className=\"Home\">\n            <div className=\"Home-container\">\n                <div \n                    className=\"Home-banner\" \n                    style={{backgroundImage: \"url(https://images-na.ssl-images-amazon.com/images/G/01/AmazonMusic/2020/ACQ/Gateway/HolidayNonPromo/DV5/US-EN_100120_HOLNonPromo_ACQ_GW_Hero_D_3000x1200_CV4_2._CB415751492_.jpg)\"}}>\n\n                </div>\n\n                <div className=\"Home-content\">\n                    <div className=\"Home-row\">\n                        {\n                            products.map((product)=>(\n                                <Product\n                                    id={product.id}\n                                    key={product.id}\n                                    title={product.product.title}\n                                    price={product.product.price}\n                                    rating={product.product.rating}\n                                    image={product.product.image}\n                                />\n                            ))\n                        }\n                    </div>\n                    <div className=\"Home-row\">\n                        <Product />\n                        <Product />\n                        <Product />\n                    </div>\n                </div>\n            </div>\n\n            \n        </div>\n    )\n}\n\nexport default Home\n","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/Header.js",["58","59","60","61"],"import React from 'react'\nimport './Header.css'\nimport SearchIcon from '@material-ui/icons/Search';\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nfunction Header(props) {\n\n    const getCount = () => {\n        // init count with 0\n        // loop through all the items\n        // add quantity to count\n        // return it\n        let count = 0;\n        props.cartItems.forEach(item => {\n            count += parseInt(item.cartItem.quantity)\n        });\n        return count;\n    }\n\n    return (\n        <div className=\"Header\">\n            {/* Logo */}\n            <Link to=\"/\">\n                <div className=\"Header-logo\">\n                    <img src={\"https://mikekitko.com/wp-content/uploads/2019/10/amazon-logo-white-768x232.png\"} />\n                </div>\n            </Link>\n            {/* Address */}\n            <div className=\"Header-optionAddress\">\n                {/* icon */}\n                <div className=\"Header-option\">\n                    <span className=\"Header-optionLineOne\">Hello,</span>\n                    <span className=\"Header-optionLineTwo\">Select your address</span>\n                </div>\n\n            </div>\n            {/* Search */}\n            <div className=\"Header-search\">\n                <input className=\"Header-searchInput\" type=\"text\" />\n                <div className=\"Header-searchIconContainer\">\n                    <SearchIcon />\n                </div>  \n            </div>\n            <div className=\"Header-navItems\">\n                    {/* Login name */}\n                <div className=\"Header-option\">\n                    <span className=\"Header-optionLineOne\">Hello, Nazariy</span>\n                    <span className=\"Header-optionLineTwo\">Account & Lsits</span>\n                </div>  \n                    {/* Orders */}\n                <div className=\"Header-option\">\n                    <span className=\"Header-optionLineOne\">Returns</span>\n                    <span className=\"Header-optionLineTwo\">& Orders</span>\n                </div>  \n                    {/* Cart */}\n                <Link to=\"/cart\">\n                    <div className=\"Header-optionCart\">\n                        <ShoppingBasketIcon />\n                        <span className=\"Header-cartCount\">{getCount()}</span>\n                    </div>\n                </Link>\n            </div>\n  \n            \n        </div>\n    )\n}\n\nexport default Header\n\n","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/firebase.js",[],"/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/CartItems.js",[],"/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/CartTotal.js",[],"/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/Product.js",["62"],"import React from 'react'\nimport { db } from './firebase'\nimport './Product.css'\n\nfunction Product(props) {\n\n    const addToCart = () => {\n        const cartItem = db.collection('cart-items').doc(props.id);\n        cartItem.get()\n        .then((doc)=>{\n            if(doc.exists){\n                cartItem.update({\n                    quantity: parseInt(doc.data().quantity) + 1\n                })\n            } else {\n                cartItem.set({\n                    title: props.title,\n                    image: props.image,\n                    price: props.price,\n                    quantity: 1\n                })\n            }\n        })\n        \n    }\n    return (\n        <div className=\"Product\">\n            <div className=\"Product-description\">\n                <span className=\"Product-title\">{props.title}</span>\n                <span className=\"Product-price\">${props.price}</span>\n                <span className=\"Product-rating\">\n                    <p>ð</p><p>ð</p><p>ð</p><p>ð</p><p>ð</p>\n                </span>\n            </div>\n            <img src={props.image} />\n            <button onClick={addToCart} >Add to Cart</button>\n        </div>\n    )\n}\n\nexport default Product\n","/home/hs/Desktop/Coding/nodejava-Dyanamic/amazon-clone/amazon-clone/src/CartItem.js",["63"],"import React from 'react'\nimport './CartItem.css'\nimport { db } from './firebase';\n\nfunction CartItem({ id, cartItem }) {\n\n    const deleteItem = () => {\n        db.collection('cart-items').doc(id).delete();\n    }\n\n\n    const changeQuantity = (newQuantity) => {\n        db.collection('cart-items').doc(id).update({\n            quantity: parseInt(newQuantity)\n        })\n    }\n    \n\n    let options = [];\n\n    for(let i = 1; i < Math.max(cartItem.quantity+1, 20); i++){\n        options.push(<option value={i}>Qty: {i}</option>)\n    }\n\n    return (\n        <div className=\"CartItem\">\n            <div className=\"CartItem-image\">\n                <img src={cartItem.image} />\n            </div>\n            <div className=\"CartItem-info\">\n                <div className=\"CartItem-title\">\n                    {cartItem.title}\n                </div>\n                <div className=\"CartItem-actions\">\n                    <div className=\"CartItem-quantity\">\n                        <select \n                            onChange={(e) => changeQuantity(e.target.value)}\n                            value={cartItem.quantity}>\n                            {options}\n                        </select>\n                    </div>\n                    <div \n                        onClick={deleteItem}\n                        className=\"CartItem-delete\">\n                        Delete\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"CartItem-price\">\n                ${cartItem.price}\n            </div>\n        </div>\n    )\n}\n\nexport default CartItem\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":12},{"ruleId":"68","severity":1,"message":"72","line":11,"column":3,"nodeType":"70","messageId":"71","endLine":11,"endColumn":7},{"ruleId":"73","severity":1,"message":"74","line":22,"column":30,"nodeType":"75","messageId":"76","endLine":22,"endColumn":32},{"ruleId":"73","severity":1,"message":"74","line":13,"column":36,"nodeType":"75","messageId":"76","endLine":13,"endColumn":38},{"ruleId":"68","severity":1,"message":"77","line":6,"column":22,"nodeType":"70","messageId":"71","endLine":6,"endColumn":28},{"ruleId":"68","severity":1,"message":"78","line":7,"column":5,"nodeType":"70","messageId":"71","endLine":7,"endColumn":11},{"ruleId":"68","severity":1,"message":"79","line":8,"column":5,"nodeType":"70","messageId":"71","endLine":8,"endColumn":10},{"ruleId":"80","severity":1,"message":"81","line":31,"column":21,"nodeType":"82","endLine":31,"endColumn":115},{"ruleId":"80","severity":1,"message":"81","line":35,"column":13,"nodeType":"82","endLine":35,"endColumn":38},{"ruleId":"80","severity":1,"message":"81","line":28,"column":17,"nodeType":"82","endLine":28,"endColumn":45},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]